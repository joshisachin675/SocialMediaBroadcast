'@model smartData.Models.AdminEditPasswordModel

@{
    ViewBag.Title = "Add Admin";
    Layout = null;
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>

<script src="~/Scripts/Admin/EditAdminPassword.js"></script>

@using (Ajax.BeginForm("UpdateAdminPassword", "ManageUser", new AjaxOptions { OnSuccess = "EditAdminPasswordSuccess(data)" }, new { @id = "EditAdminPassword" }))
{
    @Html.AntiForgeryToken()

    <div class="modal-content login-box">
        <div class="modal-header  modal-header-custom">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title modal-title-custom">Edit Password</h4>
        </div>
        <div class="modal-body">
            <ul>
                <li>
                    @Html.Label("First Name", new { @class = "" })
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "", @autofocus = "autofocus", @id="EditFirstName" })
                    @Html.ValidationMessageFor(m => m.FirstName)
                </li>

                <li>
                    @Html.Label("Last Name", new { @class = "" })
                    @Html.TextBoxFor(m => m.LastName, new { @class = "",@id="EditLastName" })
                    @Html.ValidationMessageFor(m => m.LastName)
                </li>

                <li>
                    @Html.Label("Email", new { @class = "" })
                    @Html.TextBoxFor(m => m.UserName, new { @class = "",@id="EditEmail" })
                    @Html.ValidationMessageFor(m => m.UserName)
                </li>

                @if (smartData.Common.SessionManager.LoggedInUser.UserType == 3)
                {
                    <li>
                        @Html.Label("Industry Name", new { @class = "" })
                        @Html.DropDownListFor(m => m.IndustryName, (SelectList)@ViewBag.IndustryName, "Select Industry Name", new { id = "industry" })
                        @Html.ValidationMessageFor(m => m.IndustryName)
                    </li>
                }

                <li>
                    @Html.LabelFor(m => m.Password, new { @class = "" })
                    @Html.PasswordFor(m => m.Password, new { @class = "", minlength = "8", maxlength = "12" })
                    @Html.ValidationMessageFor(m => m.Password)
                    <span id="result"></span>
                </li>

                <li>
                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "" })
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "", minlength = "8", maxlength = "12" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword)
                </li>

                @Html.HiddenFor(Model => Model.UserId)
                
            </ul>
        </div>



        <div class="modal-footer">
            <button type="button" class="btn btn-circlr" data-dismiss="modal" id="cancelEditPassword" tabindex="900">Close</button>
            <button type="submit" class="btn btn-circlr" tabindex="800">Update</button>
        </div>
    </div>
}
