@{
    ViewBag.Title = "Screens";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section CSSLinks
{
    @System.Web.Optimization.Styles.Render("~/bundles/bootstrapCss")
}
@section JSRefernces
{
@System.Web.Optimization.Scripts.Render("~/bundles/jqueryvalidate")
    @System.Web.Optimization.Scripts.Render("~/bundles/bootstrapgrid")    
}
@System.Web.Optimization.Scripts.Render("~/scripts/js/screens.js")
<script>
    var form;
    var token;
    var Param = {};
    $(document).ready(function () {
        $("#HiddenHostName").val(window.location.origin);

        $("#ScreenName").keyup(function () {
            var count = $(this).val().length;
            var text = $(this).val();
            if(count>50)
            {
                var text1 = text.substring(0, 50);
                $(this).val(text1);
            }

        });

        
        $("#txtActionName").keyup(function () {
            var count = $(this).val().length;
            var text = $(this).val();
            if (count > 50) {
                var text1 = text.substring(0, 50);
                $(this).val(text1);
            }

        });

        @functions{
            public string TokenHeaderValue()
            {
                string cookieToken, formToken;
                AntiForgery.GetTokens(null, out cookieToken, out formToken);
                return cookieToken + ":" + formToken;
            }
        }
        // Antiforgery Token
        token = '@TokenHeaderValue()';
        var headers = {};
        headers["RequestVerificationToken"] = token;

        // Set Custom filters for searching : Model Property name and search TxtBox Id names must be same
        
        $("#btnFilter").click(function () {
            var screenname = $("#screenName").val();
            var active = $("#Active").val();
            Param.clickBtn = true;
            form = $('#EditForm');
            if (screenname != "") {
                Param.screenName = screenname;
            }
            else {
                Param.screenName = "";
            }
            
            $('#grid').bootstrapTable('filterBy');
            Param.clickBtn = false;
        });
        $("#EditForm").on("submit", function (event) {
            if ($("#txtscreenName").val().trim() == "") {
                BootstrapDialog.alert("Please Enter Screen Name");
                $('#loadingmessage').hide();
                return false;
            }
            mycustomsubmit(event);
        });
        form = $('#EditForm');
        function mycustomsubmit(e) {
            $('#loadingmessage').show();

            if ($("#ModuleId").val().trim() == "Select Module") {
                $("#ModuleId").focus();
                BootstrapDialog.alert("Please Select Module Name");
                $('#loadingmessage').hide();
                return false;
            }

            e.preventDefault();
            $.ajax({
                cache: false,
                async: true,
                type: "POST",
                url: $("#HiddenHostName").val() + "/api/screenAPI/Editscreen",
                data: $('#EditForm').serialize(),//form.serialize(),
                success: function (data) {
                    RefreshGrid();
                    if(data == 'true'){
                        ShowMessage(BootstrapDialog.TYPE_SUCCESS, 'Your Record is successfully updated.');
                    }
                    else {
                        ShowMessage(BootstrapDialog.TYPE_SUCCESS, 'Sorry Duplicate Records exists.');
                    }
                    $("#myModal").modal('hide');
                    $('#loadingmessage').hide();
                    
                },
                error: function (request, error) {
                    if (request.statusText == "CustomMessage") {
                        $("#spanError").html(request.responseText)
                    }
                },
                headers: {
                    'RequestVerificationToken': '@TokenHeaderValue()'
                }
            });

           
        }

        var reqUrl = $("#HiddenHostName").val() + '/api/screenAPI/GetScreens';
        //alert("Call");
        $('#grid').bootstrapTable({
            headers: headers,
            method: 'post',
            url: reqUrl,
            cache: false,
            height: 500,
            classes: 'table table-hover',
            customParams: Param,
            striped: true,
            pageNumber: 1,
            pagination: true,
            pageSize: 10,
            pageList: [5, 10, 20, 30],
            search: false,
            showColumns: true,
            showRefresh: true,
            sidePagination: 'server',
            minimumCountColumns: 2,
            showHeader: true,
            showFilter: false,
            smartDisplay: true,
            clickToSelect: true,
            rowStyle: rowStyle,
            toolbar: '#custom-toolbar',
            columns: [
                
            {
                field: 'ScreenName',
                title: 'Screen',
                type: 'search',
                sortable: true,
            },
            
            {
                field: 'operate',
                title: 'Actions',


                clickToSelect: false,
                formatter: operateFormatter,
                events: operateEvents
            }],
            
            onSubmit: function () {
                var data = $('#filter-bar').bootstrapTableFilter('getData');
                console.log(data);
            },
            onLoadSuccess: function () {
                Addtitle();
            },
            onPageChange: function () {
                Addtitle();
            }
        });
        
    });

</script>
<div style="height:40px;width:100%"><h3>Screens</h3></div>
<div id="custom-toolbar">
    <div class="form-inline" role="form">
        <div class="form-group">
           
        </div>
        <div class="form-group">
            <div class="search">
                <input class="form-control" id="screenName" placeholder="screen Name" type="text" name="screenName">
            </div>
        </div>

        <div class="form-group">

            <input class="btn btn-success" id="btnFilter" placeholder="" type="button" value="Filter" name="btnFilter">
        </div>

        <div class="form-group">



            @*<input class="btn btnAdd btn-success" id="btnAdd" placeholder="" type="button" value="Add" name="btnAdd">*@



        </div>

    </div>
</div>

<div id="filter-bar"> </div>
<table class="table table-hover" data-toolbar="#custom-toolbar" data-show-columns="true" data-show-filter="true"
       id="grid">
    <thead>
        <tr>
            <th data-field="ScreenId">Screen ID</th>
            <th data-field="ScreenName">Screen Name</th>

        </tr>
    </thead>
</table>

<div id="myModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">
                    Update Screen
                </h4>
            </div>
            
            <form id="EditForm">
                <div class="modal-body">
                    <div class="row" style="display:none;">
                        <div class="col-sm-4">
                            Screen Id
                        </div>
                        <div class="col-sm-8">
                            <input type="text" name="screenId" readonly id="screenId" style="display:none;" />
                            <span id="showscreenId">

                            </span>
                           
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-4">
                            Screen
                        </div>
                        <div class="col-sm-8">
                            <input type="text" name="screenName" id="txtscreenName" maxlength="50" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-4">
                            Module
                        </div>
                        <div class="col-sm-8">
                           
                            
                            @Html.DropDownList("ModuleId", (IEnumerable<SelectListItem>)ViewBag.moduleList,"Select Module")
                           
                        </div>
                    </div>


                </div>

                <div class="modal-footer">
                    <button type="submit" id="userUpdate" class="btn btn-primary">Update</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>

                    <input id="ModifiedBy" type="text" name="ModifiedBy" value="@ViewBag.logUser" style="display:none;" />
                </div>
            </form>
        </div>
    </div>
</div>

<div id="AddModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                @Html.Partial("_NewScreen")
            </div>
        </div>
    </div>
</div>

<div id="AddActionModel" class="modal fade AddActionModel">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>

                @Html.Partial("_ScreenAction")

            </div>
        </div>
    </div>
</div>

<div id='loadingmessage' class="loader1 fade1" style="display: none; z-index: 5000; height: 95%; width: 90%; margin-left: 4%; ">
    <img src='~/Areas/ScreenPermissions/Images/loading2.gif' style="height: 50px;width: 50px;" />
</div>
